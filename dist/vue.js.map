{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n * 判断是否为函数\r\n * @param {*} val \r\n * @returns \r\n */\r\nexport function isFunction(val) {\r\n    return typeof val == 'function';\r\n}\r\n\r\n/**\r\n * 判断是否为对象：类型是object，且不能为 null\r\n * @param {*} val \r\n * @returns \r\n */\r\nexport function isObject(val) {\r\n    return typeof val == 'object' && val !== null;\r\n}\r\n\r\n/**\r\n * 判断是否是数组\r\n * @param {*} val \r\n * @returns \r\n */\r\nexport function isArray(val) {\r\n    return Array.isArray(val);\r\n}","/* 出于对性能的考虑，Vue 没有对数组类型的数组使用 Object.defineProperty 进行递归劫持，\r\n而是通过对能够导致原数组变化的 7 个方法进行拦截和重写实现了数据劫持 */\r\n\r\n// 拿到数组的原型方法\r\nlet oldArrayPrototype = Array.prototype;\r\n// 原型继承，将原型链向后移动 arrayMethods.__proto__ == oldArrayPrototype\r\n// Object.create()方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n\r\n// 重写能够导致原数组变化的七个方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];\r\n\r\n// 在数组自身上进行方法重写，对链上的同名方法进行拦截\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        console.log('数组的方法进行重写 method = ' + method);\r\n\r\n        // 调用数组原生方法逻辑（绑定到当前调用上下文）\r\n        oldArrayPrototype[method].call(this, ...args);\r\n\r\n        // 数组新增的属性如果是属性，要继续观测\r\n        // 哪些方法有增加数组的功能：splice push unshift\r\n        let inserted = null;\r\n        switch (method) {\r\n            case 'splice':\r\n                inserted = args.slice(2);\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n        }\r\n\r\n        let ob = this.__ob__;\r\n        // observeArray：内部遍历 inserte 数组，调用 observe 方法，是对象就 new Observer，继续深层观察\r\n        if (inserted) {\r\n            ob.observeArray(inserted); // inserted 有值就是数组\r\n        }\r\n    }\r\n})","import { isObject, isArray } from '../utils';\r\nimport { arrayMethods } from \"./array\";\r\n\r\n// 核心模块 observe：对数据进行观测\r\nexport function observe(value) {\r\n    // 如果 value 不是对象，就不需要观测，直接 return\r\n    if (!isObject(value)) {\r\n        return;\r\n    }\r\n\r\n    // 观测 value 对象，实现数据响应式\r\n    return new Observer(value);\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        // value：为数组或对象添加自定义属性 __ob__ = this\r\n        // this：为当前 Observer 类的实例，实例上就有 observeArray 方法\r\n        // value.__ob__ = this;  // 可被遍历枚举，会造成死循环\r\n        // 定义 __ob__ 属性为不可被枚举，防止对象在进入 walk 都继续 defineProperty,造成死循环\r\n        Object.defineProperty(value, '__ob__', {\r\n            value: this,\r\n            enumerable: false // 不可被枚举\r\n        })\r\n\r\n        // 分别处理 value 为数组和对象两种情况\r\n        if (isArray(value)) {\r\n            value.__proto__ = arrayMethods; //更改数组的原型方法\r\n            this.observeArray(value); // 对数组数据类型进行深层观测\r\n        } else {      \r\n            // 如果 value 是对象，遍历对象中的属性，使用 object.defineProperty 重新定义\r\n            this.walk(value); // 循环对象属性\r\n        }\r\n    }\r\n\r\n    /**\r\n   * 遍历数组，对数组中的对象进行递归观测\r\n   *  1）[[]] 数组套数组\r\n   *  2）[{}] 数组套对象\r\n   * @param {*} data \r\n   */\r\n    observeArray(data) {\r\n        // observe 方法内，如果是对象类型，继续 new Observer 进行递归处理\r\n        data.forEach(item => observe(item));\r\n    }\r\n\r\n    // 循环 data 对象，使用 Object.keys 不循环原型方法\r\n    walk(data) {\r\n        Object.keys(data).forEach(key => {\r\n            // 使用 object.defineProperty 重新定义 data 对象中的属性\r\n            defineReactive(data, key, data[key]);\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * 给对象Obj，定义属性key，值为value\r\n *  使用Object.defineProperty重新定义data对象中的属性\r\n *  由于Object.defineProperty性能低，所以vue2的性能瓶颈也在这里\r\n * @param {*} obj 需要定义属性的对象\r\n * @param {*} key 给对象定义的属性名\r\n * @param {*} value 给对象定义的属性值\r\n */\r\nfunction defineReactive(obj, key, value) {\r\n    // 递归实现深层观测\r\n    observe(value);\r\n\r\n    Object.defineProperty(obj, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            // console.log(\"修改了被观测属性 key = \" + key + \", newValue = \" + JSON.stringify(newValue));\r\n            if (newValue === value) return;\r\n            // 当值被修改时，通过 observe 实现对新值得深层观测，此时，新增对象将被观测\r\n            observe(newValue);\r\n            value = newValue;\r\n        }\r\n    })\r\n}","import { observe } from './observe';\r\nimport { isFunction } from './utils';\r\n\r\n// 状态的初始化\r\n// 集中进行数据的初始化处理：initState 方法\r\nexport function initState(vm) {\r\n    // 获取 options：_init 中已 options 挂载到 vm.$options\r\n    const opts = vm.$options;\r\n\r\n    if (opts.data) {\r\n        initData(vm);  // data 数据的初始化\r\n    }\r\n\r\n    // props 数据的初始化\r\n    // watch 数据的初始化\r\n    // computed 数据的初始化\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // 拿到 vue 初始化时，用户传入的 data 数据\r\n\r\n    // data 可能是函数或对象\r\n    //  如果 data 是函数，则需要让 data 函数执行，拿到它返回的对象\r\n    //  如果 data 是对象，不做处理\r\n    // data 执行时，绑定 this 为 vm\r\n    data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    observe(data); // 使用 observe 实现 data 数据的响应式\r\n\r\n     // 为了让外部的 vm 实例能够拿到观测后的 data，将处理后的 data 直接挂载到 vm 上\r\n    vm._data = data;\r\n\r\n    // 当 vm.message 在 vm 实例上取值时，将它代理到 vm._data 上去取\r\n    for(let key in data) {\r\n        Proxy(vm, key, '_data');\r\n    }\r\n}\r\n\r\n/**\r\n * 代理方法\r\n *  当取 vm.key 时，将它代理到 vm._data上去取\r\n * @param {*} vm        vm 实例\r\n * @param {*} key       属性名\r\n * @param {*} source    代理目标，这里是vm._data\r\n */\r\nfunction Proxy(vm, key, source) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key];\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}","// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;  \r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\n// 结束标签\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; \r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parserHTML(html) {\r\n    console.log(\"***** 进入 parserHTML：将模板编译成 AST 语法树 *****\");\r\n    let stack = [];\r\n    let root = null;\r\n\r\n    // 构建父子关系\r\n    function createASTElement(tag, attrs, parent) {\r\n        return {\r\n            tag, // 标签名\r\n            type: 1, // 元素\r\n            children: [], // 儿子\r\n            parent, // 父亲\r\n            attrs // 属性\r\n        }\r\n    }\r\n\r\n    // 处理开始标签,如:[div,p]\r\n    function start(tag, attrs) {\r\n        // 遇到开始标签，就取栈中最后一个，作为父节点\r\n        let parent = stack[stack.length - 1];\r\n        let element = createASTElement(tag, attrs, parent);\r\n        // 还没有根节点时，作为根节点\r\n        if (root == null) {\r\n            root = element;\r\n        }\r\n        if (parent) {\r\n            element.parent = parent; // 为当前节点设置父节点\r\n            parent.children.push(element); // 同时，当前节点称为父节点的子节点\r\n        }\r\n        stack.push(element);\r\n    }\r\n    // 结束标签\r\n    function end(tagName) {\r\n        // 如果是结束标签，就从栈中抛出\r\n        let endTag = stack.pop();\r\n        // check：抛出的结果标签名与当前结束标签名是否一致\r\n        if (endTag.tag != tagName) {\r\n            console.log(\"标签出错\");\r\n        }\r\n    }\r\n    // 文本标签\r\n    function text(chars) {\r\n        // 文本直接放到前一个中，注意：文本可能有空白字符\r\n        let parent = stack[stack.length - 1];\r\n        chars = chars.replace(/\\s/g, \"\"); // 将空格替换为空，即删除空格\r\n        if (chars) {\r\n            parent.children.push({\r\n                type: 2, // 文本类型为 2\r\n                text: chars\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n   * 截取字符串\r\n   * @param {*} len 截取长度\r\n   */\r\n    function advance(len) {\r\n        html = html.substring(len);\r\n    }\r\n    /**\r\n   * 匹配开始标签，返回匹配结果\r\n   */\r\n    function parseStartTag() {\r\n        // 匹配开始标签，开始标签名为索引 1\r\n        // console.log('<aa:aa-xxx'.match(startTagOpen))\r\n        // [\r\n        // '<aa:aa-xxx',\r\n        // 'aa:aa-xxx',\t\t\t// 开始标签的标签名\r\n        // index: 0,\r\n        // input: '<aa:aa-xxx',\r\n        // groups: undefined\r\n        // ]\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            // 构造匹配结果，包含标签名和属性\r\n            const match = {\r\n                tagName:start[1],\r\n                attrs:[]\r\n            }\r\n            console.log(\"match 结果：\"+match);\r\n            // 截取匹配到的结果\r\n            advance(start[0].length);\r\n            console.log(\"截取后的 html: \"+ html);\r\n\r\n            let end;  // 是否匹配到开始标签的结束符号 > 或 /> \r\n            let attr; // 存储属性匹配的结果\r\n            // 匹配属性且不能为开始的结束标签，例如：<div>，到 > 就已经结束了，不再继续匹配该标签内的属性\r\n            // \t\tattr = html.match(attribute)  匹配属性并赋值当前属性的匹配结果\r\n            // \t\t!(end = html.match(startTagClose))   没有匹配到开始标签的关闭符号 > 或 />\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 将匹配到的属性，push 到 attrs 数组中，匹配到关闭符号 >，while 就结束\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n                advance(attr[0].length); // 截取匹配到的属性 xxx=xxx\r\n            }\r\n            // 匹配到关闭符号 >,当前标签处理完成 while 结束\r\n            // 此时，<div id=\"app\" 处理完成，需连同关闭符号 > 一起被截取掉\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n\r\n            // 开始标签处理完成后，返回匹配结果：tagName 标签名 + attrs属性\r\n            return match;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 对模板不停截取，直至全部解析完毕\r\n    while(html) {\r\n        // 解析标签 or 文本，看第一字符是否为尖角号 <\r\n        let index = html.indexOf('<');\r\n        if (index == 0) {\r\n            console.log(\"解析 html：\" + html + \",结果：是标签\");\r\n            // 如果是标签，继续解析开始标签和属性\r\n            const startTagMatch = parseStartTag(); // 匹配开始标签，返回匹配结果\r\n            if (startTagMatch) { // 匹配到开始标签\r\n                // 匹配到开始标签，调用start方法，传递标签名和属性\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue; // 如果是开始标签，无需执行下面逻辑，继续下次 while 解析后续内容\r\n            }\r\n\r\n            // 没有匹配到开始标签，此时有可能为结束标签 </div>，继续处理结束标签\r\n            let endTagMatch;\r\n            // console.log('</aa:aa-xxxdsadsa>'.match(endTag))\r\n            // [\r\n            // '</aa:aa-xxxdsadsa>',\r\n            // 'aa:aa-xxxdsadsa', \t\t// 结束标签的标签名\r\n            // index: 0,\r\n            // input: '</aa:aa-xxxdsadsa>',\r\n            // groups: undefined\r\n            // ]\r\n            if (endTagMatch = html.match(endTag)) { // 匹配到结束标签\r\n                // 匹配到开始标签，调用start方法，传递标签名和属性\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue; // 如果是结束标签，无需执行下面逻辑，继续下次 while 解析后续内容\r\n            }\r\n        }\r\n\r\n        if (index > 0) { // 文本\r\n            // 将文本取出来并发射出去，再从 html 中拿掉\r\n            let chars = html.substring(0, index); // hello</div>\r\n            text(chars);\r\n            advance(chars.length);\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","import { parserHTML } from \"./parser\";\r\n\r\n// 将模板编译为 ast 语法树\r\n\r\nexport function compileToFunction(template) {\r\n    // 1. 将模板变成 AST 语法树\r\n    let ast = parserHTML(template);\r\n    console.log(\"解析 HTML 返回 ast 语法树====>\");\r\n    console.log(ast);\r\n    // 2. 使用 AST 生成 render 函数\r\n    let code = generate(ast);\r\n}\r\n\r\nfunction generate(ast) {\r\n    console.log(\"parserHTML-ast：\" + ast);\r\n}","import { initState } from \"./state\";\r\nimport { compileToFunction } from './compiler/index';\r\n\r\n// 原型方法 _init 模块化处理\r\nexport function initMixin(Vue) {\r\n    // 在 Vue 原型上扩展一个原型方法 _init,进行 vue 初始化\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options);\r\n        const vm = this; // this 指向当前 vue 实例\r\n        vm.$options = options; // 将 Vue 实例化时用户传入的 options 暴露到 vm 实例上\r\n\r\n        // new Vue 时，传入 options 选项，包含 el 和 data\r\n        initState(vm); // 状态的初始化\r\n\r\n        if (vm.$options.el) {\r\n            console.log(\"有el,需要挂载\");\r\n        }\r\n    }\r\n\r\n    // 支持 new Vue({el}) 和 new Vue().$mount 两种情况\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        const opts = vm.$options;\r\n        el = document.querySelector(el); // 获取真实的元素\r\n        vm.$el = el; // vm.$el 为当前页面上的真实元素\r\n\r\n        // 如果没有 render,找 template\r\n        if (!opts.render) {\r\n            // 如果没有 template，采用元素中的内容\r\n            let template = opts.template;\r\n            console.log(\"template = \" + template);\r\n            if (!template) {\r\n                // 拿到整个元素标签\r\n                console.log(\"没有template, el.outerHTML = \" + el.outerHTML);\r\n                template = el.outerHTML;\r\n            } else {\r\n                console.log('有 template = ' + template);\r\n            }\r\n\r\n            let render = compileToFunction(template);\r\n            opts.render = render;\r\n        }\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n/* Vue 中所有功能都是通过原型扩展方式添加的\r\n@Param {*} options  new Vue 时传入的 options 配置对象 */\r\nfunction Vue(options) {\r\n    this._init(options); // 调用 Vue 原型上 _init 方法\r\n}\r\n\r\n// 调用 initMixin 进行 Vue 初始化操作\r\ninitMixin(Vue);\r\n\r\nexport default Vue;"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","call","inserted","slice","ob","__ob__","observeArray","observe","value","Observer","constructor","defineProperty","enumerable","__proto__","walk","data","item","keys","key","defineReactive","obj","get","set","newValue","initState","vm","opts","$options","initData","_data","Proxy","source","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","stack","root","createASTElement","tag","attrs","parent","type","children","start","length","element","push","end","tagName","pop","text","chars","replace","advance","len","substring","parseStartTag","match","attr","name","index","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","generate","initMixin","Vue","_init","options","el","$mount","document","querySelector","$el","render","outerHTML"],"mappings":"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"}